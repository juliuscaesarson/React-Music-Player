{"version":3,"sources":["config/fire.js","login.js","audio.js","delete.js","like.js","liked.js","home.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","login","bind","handleChange","signup","state","email","password","e","this","setState","target","name","value","preventDefault","auth","signInWithEmailAndPassword","then","u","catch","error","console","log","alert","createUserWithEmailAndPassword","message","className","htmlFor","onChange","type","id","onClick","Component","Audio","controls","src","title","Delete","Like","numLikes","Liked","Home","file","audio","isLoading","isUploading","likes","filtered","logout","upload","onChangeFile","getAudio","delete","edit","handleEdit","like","handleSearch","signOut","current","storageRef","storage","ref","currentUser","uid","db","database","child","getDownloadURL","foundURL","put","url","newPostKey","push","key","set","substring","lastIndexOf","parent","user","original","document","getElementById","classList","add","nextElementSibling","remove","contains","parentElement","fileName","previousElementSibling","fileRef","songName","getAttribute","search","$","val","filter","song","toLowerCase","includes","defaultValue","placeholder","files","map","index","undefined","Fragment","length","on","snapshot","forEach","users","Object","keys","App","authListener","onAuthStateChanged","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf46a18c.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport 'firebase/storage';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBqjlUw4mmHCifP3BbleVp5sLAUWTYpR74\",\n  authDomain: \"soundcloud-c3feb.firebaseapp.com\",\n  databaseURL: \"https://soundcloud-c3feb.firebaseio.com\",\n  projectId: \"soundcloud-c3feb\",\n  storageBucket: \"soundcloud-c3feb.appspot.com\",\n  messagingSenderId: \"1010127862680\",\n  appId: \"1:1010127862680:web:23e8dd47c88df362d309ed\",\n  measurementId: \"G-RJF1VBYCE6\"\n};\n// Initialize Firebase\nconst fire = firebase.initializeApp(firebaseConfig);\n\nexport default fire;","import React, { Component } from 'react';\nimport fire from './config/fire';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    // Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n    this.login = this.login.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.signup = this.signup.bind(this);\n    this.state = {\n      email:'',\n      password:''\n    }\n  }\n\n  handleChange(e) {\n    // Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  login(e) {\n    e.preventDefault();\n    // Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n    }).catch((error) => {\n      console.log(error);\n      alert(\"Email or Password is incorrect\");\n    })\n  }\n\n  signup(e){\n    e.preventDefault();\n    if (this.state.email === '' || this.state.password === '') {\n      alert(\"Please enter email and password to sign up\");\n\n    }\n    else {\n      // Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n      fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\n      }).then((u)=>{\n        console.log(u);\n      })\n      .catch((error) => {\n          alert(error.message);\n      })\n    }\n    \n  } \n\n  render() {\n    return (\n       <div className=\"col-md-10\">\n          <form>\n            <div className=\"form\">\n              <label htmlFor=\"emailInput\">Email Address </label>\n              <input value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" id=\"emailInput\" />\n            </div>\n            <div className=\"form\">\n              <label htmlFor=\"passInput\">Password </label>\n              <input value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" id=\"passInput\" />\n            </div>\n            <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Login</button>\n            <button onClick={this.signup} className=\"btn btn-success\">Register</button>\n          </form>\n \n        </div>\n    );\n  }\n}\n\n\nexport default Login;\n","import React, { Component } from 'react';\nimport ReactPlayer from 'react-audio-player';\n\nclass Audio extends Component {\n  render() {\n    // Audio player from npm package react-audio-player\n    return (    \n        <div className=\"player\">\n            <ReactPlayer controls className=\"audio-element\" src={this.props.src} title={this.props.title}/>\n        </div>\n\n      \n    );\n  }\n}\n\n\nexport default Audio;\n","import React, { Component } from 'react';\n\nclass Delete extends Component {\n  render() {\n    // Delete button \n    return (\n        <div className=\"trash\" >\n            <i className=\"fa fa-trash fa-2x\" title={this.props.title} onClick={this.props.onClick}  />\n        </div>\n    );\n  }\n}\n\n\nexport default Delete;\n\n","import React, { Component } from 'react';\n\nclass Like extends Component {\n  render() {\n    // Like button \n    return (\n        <div className=\"like\" >\n            <span className=\"numLikes\">{this.props.numLikes}</span>\n            <i className=\"fa fa-thumbs-o-up fa-2x\" title={this.props.title} onClick={this.props.onClick}  />\n        </div>\n    );\n  }\n}\n\n\nexport default Like;\n\n","import React, { Component } from 'react';\n\nclass Liked extends Component {\n  render() {\n    // Liked button \n    return (\n        <div className=\"like\" >\n            <span className=\"numLikes\">{this.props.numLikes}</span>\n            <i className=\"fa fa-thumbs-up fa-2x\" title={this.props.title} onClick={this.props.onClick}  />\n        </div>\n    );\n  }\n}\n\n\nexport default Liked;\n\n","import React, { Component } from 'react';\nimport fire from './config/fire';\nimport './App.css';\nimport Audio from './audio';\nimport Delete from './delete';\nimport Like from './like';\nimport Liked from './liked';\nimport $ from 'jquery';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    // Set state\n    this.state = {\n      file: null,\n      audio: [],\n      isLoading: false,\n      isUploading: false,\n      likes:[],\n      filtered: [],\n    }\n    // Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n    // Bind all functions to this\n    this.logout = this.logout.bind(this);\n    this.upload = this.upload.bind(this);\n    this.onChangeFile = this.onChangeFile.bind(this);\n    this.getAudio = this.getAudio.bind(this);\n    this.delete = this.delete.bind(this);\n    this.edit = this.edit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.like = this.like.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  componentDidMount() {\n    // Stops page from rerendering until all music files have been loaded by this.getAudio()\n    this.setState({isLoading: true});\n    // Gets all music files to display on page\n    this.getAudio();\n\n  }\n\n  logout() {\n    // Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n    fire.auth().signOut();\n  }\n\n  onChangeFile(file) {\n    // Sets state when user chooses a file to upload\n    this.setState({\n      file\n    })\n  }\n\n  upload() {\n    // Makes sure that a file is selected before uploading file\n    if (this.state.file != null) {\n      // Stops page from rerendering until file has been successfully uploaded\n      this.setState({isUploading:true});\n      const current = this;\n      const file = this.state.file[0]\n      // Set storage and database references using currently logged in user's uid\n      // Creates a user's folder within the database if current user's own folder doesn't exist, but if it already exists, it will put the uploaded file into the user specific directory\n      const storageRef = fire.storage().ref(fire.auth().currentUser.uid);\n      const db = fire.database().ref(\"users/\" + fire.auth().currentUser.uid);\n      // Checks to see if file name already exists in user's folder\n      // Because Firebase API can only request a file that exists, checking for a non-existent file is handled as an error\n      // This is why a Promise error is needed as a condition for inserting music files\n      storageRef.child(file.name).getDownloadURL().then(onResolve, onReject);\n      // If promise function resolves, that means file exists\n      function onResolve(foundURL) {\n        alert(\"Filename already exists\");\n        current.setState({isUploading: false});\n      }\n      // If promise function doesn't resolve, then file doesn't exist and we can upload our new file\n      function onReject(error) {\n        // Set file reference for storage\n        const fileRef = storageRef.child(file.name);\n        // Puts file into storage\n        fileRef.put(file).then(() => {\n          console.log(\"Uploaded file: \" + file.name);\n          // Gets download url of the newly uploaded file to add to the database\n          storageRef.child(file.name).getDownloadURL().then(url => {\n            // Generates a new key for the doc that is about to be uploaded from Firebase documentation\n            let newPostKey = db.push().key;\n            // Set database doc with name, url, key, parent, user, and original\n            db.child(newPostKey).set({\n                name : file.name.substring(0,file.name.lastIndexOf('.')),\n                url : url,\n                key : newPostKey,\n                parent : fire.auth().currentUser.uid,\n                user : fire.auth().currentUser.email,\n                original : file.name\n            });\n            // console.log(current.state.audio);\n            current.setState({isUploading:false});\n          })\n        })\n      }\n      // Clears the file upload button of the previous file\n      document.getElementById(\"fileUpload\").value = \"\";\n    }\n    else {\n      // Notifies user to select a file\n      alert(\"Please select a file to upload\");\n    }\n    \n  } \n\n  handleEdit(e) {\n    // Hides the span element that contains the song name\n    e.target.classList.add(\"hidden\");\n    // Reveals a text input form  \n    e.target.nextElementSibling.classList.remove(\"hidden\");\n    // Reveals an edit button to submit new name for song\n    e.target.nextElementSibling.nextElementSibling.classList.remove(\"hidden\");\n    // Reveals a cancel button to cancel editing\n    e.target.nextElementSibling.nextElementSibling.nextElementSibling.classList.remove(\"hidden\");\n\n  }\n\n  edit(e) {\n    // Checks to see if user clicked on the edit button or the cancel button\n    if (e.target.classList.contains(\"fa-edit\")) {\n      // Gets the song's unique key that was generated when uploaded to Firebase database\n      let key = e.target.parentElement.parentElement.id;\n      // Gets the new name for the song from the input element\n      let fileName = e.target.previousElementSibling.value;\n      // Set database reference to user specific folder and song that wants to be edited\n      let db = fire.database().ref(\"users/\" + fire.auth().currentUser.uid + \"/\" + key);\n      // Sets the key \"name\" with the new song name \n      db.child(\"name\").set(fileName).then(function() {\n        console.log(\"File renamed\");\n      }).catch(function(error) {\n        console.log(\"Edit failed: \" + error.message);\n      });\n      // Hides the cancel button\n      e.target.nextElementSibling.classList.add(\"hidden\");\n      // Hides itself\n      e.target.classList.add(\"hidden\");\n      // Hides the input form\n      e.target.previousElementSibling.classList.add(\"hidden\");\n      // Reveals the span containing the new name of the song\n      e.target.previousElementSibling.previousElementSibling.classList.remove(\"hidden\");\n    }\n    else {\n      // Hides the cancel button\n      e.target.classList.add(\"hidden\");\n      // Hides the edit button\n      e.target.previousElementSibling.classList.add(\"hidden\");\n      // Hides the input form\n      e.target.previousElementSibling.previousElementSibling.classList.add(\"hidden\");\n      // Reveals the span containing the original name of the song\n      e.target.previousElementSibling.previousElementSibling.previousElementSibling.classList.remove(\"hidden\");\n    }\n\n\n  }\n\n  delete(e) {\n    // Gets the song name that needs to be deleted\n    let fileName = e.target.title;\n    // Gets the unique key for the song from the <li> element\n    let key = e.target.parentElement.parentElement.id;\n    // Sets database and storage reference\n    const fileRef = fire.storage().ref(fire.auth().currentUser.uid + \"/\" + fileName);\n    const db = fire.database().ref(\"users/\" + fire.auth().currentUser.uid + \"/\" + key);\n    // Removes the reference in the database and then removes the file from the storage\n    db.remove().then(function() {\n      fileRef.delete().then(function() {\n        console.log(\"File Deleted!\");\n      }).catch(function(error) {\n        console.log(\"Remove file failed: \" + error.message)\n      })\n    }).catch(function(error) {\n      console.log(\"Remove db failed: \" + error.message);\n    });\n    fire.database().ref(\"likes/\" + key).remove().then(function() {\n      console.log(\"Likes removed\");\n    }).catch(function(error) {\n      console.log(\"Remove likes failed: \" + error.message);\n    })\n    \n  }\n\n  like(e) {\n    let key = e.target.parentElement.parentElement.id;\n    let songName = e.target.parentElement.parentElement.getAttribute(\"name\");\n    const db = fire.database().ref(\"likes/\" + key);\n    // Check if it hasnt been liked yet, then like it\n    if (e.target.classList.contains(\"fa-thumbs-o-up\")) {\n      e.target.classList.remove(\"fa-thumbs-o-up\");\n      e.target.classList.add(\"fa-thumbs-up\");\n      db.child(fire.auth().currentUser.uid).set(songName).then(function() {\n        console.log(\"Liked\");\n      }).catch(function(error) {\n        console.log(\"Cannot like: \" + error.message);\n      });\n\n    }\n    // If it has already been liked by user, unlike\n    else {\n      e.target.classList.remove(\"fa-thumbs-up\");\n      e.target.classList.add(\"fa-thumbs-o-up\");\n      db.child(fire.auth().currentUser.uid).remove().then(function() {\n        console.log(\"Unliked\");\n      }).catch(function(error) {\n        console.log(\"Cannot unlike: \" + error.message);\n      })\n    }\n  }\n\n  handleSearch(e) {\n    // Gets the input value in the search bar dynamically\n    let search = $(\"#search\").val();\n    // Sets state of filtered from this.state.audio with song names that only match the search query\n    // Code from https://stackoverflow.com/questions/36326612/delete-item-from-state-array-in-react\n    this.setState({\n      filtered: this.state.audio.filter(function(song) { \n        if (song.name.toLowerCase().includes(search)) {\n          return song\n        }\n\n    })});\n  }\n\n  render() {\n    // Code to display loading while data is being fetched from https://stackoverflow.com/questions/55359176/handling-undefined-null-properties-in-components-during-first-render\n    if (this.state.isLoading) {\n      return <h2>Loading...</h2>\n    }\n    // Code to display uploading while file is being uploaded to storage\n    if (this.state.isUploading) {\n      return <h2>Uploading...</h2>\n    }\n\n    // console.log(this.state.audio);\n    // console.log(this.state.filtered);\n    return (\n      <div className=\"container\">\n        {/* Main title and logout button */}\n        <div className=\"page-header\">\n          <h1>React Player</h1>\n          <button onClick={this.logout} id=\"logout\" className=\"btn btn-success\">Logout</button>\n        </div >\n        {/* Upload file elements */}\n        <div className=\"row\">\n          <input type=\"text\" id=\"search\" defaultValue=\"\" onChange={this.handleSearch} placeholder=\"    Search\" />\n          <input type=\"file\" id=\"fileUpload\" onChange={(e) => {this.onChangeFile(e.target.files)}} />\n          <button onClick={this.upload} className=\"btn btn-primary\">Upload</button>\n        </div>\n  \n        <div className=\"row\">\n          <ul>\n            {/* List of music files that will be displayed with titles, user who uploaded it, a music player with mutliple functions, and an edit or delete function for user's own music files */}\n              {this.state.filtered.map((song, index) => {\n                // Code for conditional rendering from https://stackoverflow.com/questions/44969877/if-condition-inside-of-map-react\n                // Checks if logged in user owns these files\n                  if (song.parent === fire.auth().currentUser.uid) {\n                    // Check if anyone liked this song\n                    if (this.state.likes[song.key] === undefined) {\n                      return <React.Fragment key={index}>\n                      <li className=\"audioFile\" id={song.key} name={song.name}>\n                        <Like title={song.name} onClick={this.like} numLikes={0} />\n                        <div className=\"songName\">\n                          <span className=\"name\" onClick={this.handleEdit}>{song.name}</span>\n                          <input className=\"editName hidden\" type=\"text\" defaultValue={song.name}/>\n                          <i className=\"fa fa-edit hidden\" onClick={this.edit} title={song.name}/>\n                          <i className=\"fa fa-times hidden\" onClick={this.edit} />\n                          <br/>\n                          <span className=\"uploadedBy\">Uploaded by: {song.user}</span>\n                        </div>\n                        {/* Audio player component */}\n                        <Audio title={song.name} src={song.url} user={song.parent} />\n                        {/* Delete button component */}\n                        <Delete onClick={this.delete} title={song.original} />\n                      </li>\n                      </React.Fragment>\n                    }\n                    else {\n                      // Check if currently logged in user liked this song so it can render with the like button already clicked\n                      if (this.state.likes[song.key].includes(fire.auth().currentUser.uid)) {\n                        return <React.Fragment key={index}>\n                        <li className=\"audioFile\" id={song.key} name={song.name}>\n                          <Liked title={song.name} onClick={this.like} numLikes={this.state.likes[song.key].length} />\n                          <div className=\"songName\">\n                            <span className=\"name\" onClick={this.handleEdit}>{song.name}</span>\n                            <input className=\"editName hidden\" type=\"text\" defaultValue={song.name}/>\n                            <i className=\"fa fa-edit hidden\" onClick={this.edit} title={song.name}/>\n                            <i className=\"fa fa-times hidden\" onClick={this.edit} />\n                            <br/>\n                            <span className=\"uploadedBy\">Uploaded by: {song.user}</span>\n                          </div>\n                          {/* Audio player component */}\n                          <Audio title={song.name} src={song.url} user={song.parent} />\n                          {/* Delete button component */}\n                          <Delete onClick={this.delete} title={song.original} />\n                        </li>\n                        </React.Fragment>\n                      }\n                      // Renders without like button being clicked\n                      else {\n                        return <React.Fragment key={index}>\n                        <li className=\"audioFile\" id={song.key} name={song.name}>\n                          <Like title={song.name} onClick={this.like} numLikes={this.state.likes[song.key].length} />\n                          <div className=\"songName\">\n                            <span className=\"name\" onClick={this.handleEdit}>{song.name}</span>\n                            <input className=\"editName hidden\" type=\"text\" defaultValue={song.name}/>\n                            <i className=\"fa fa-edit hidden\" onClick={this.edit} title={song.name}/>\n                            <i className=\"fa fa-times hidden\" onClick={this.edit} />\n                            <br/>\n                            <span className=\"uploadedBy\">Uploaded by: {song.user}</span>\n                          </div>\n                          {/* Audio player component */}\n                          <Audio title={song.name} src={song.url} user={song.parent} />\n                          {/* Delete button component */}\n                          <Delete onClick={this.delete} title={song.original} />\n                        </li>\n                        </React.Fragment>\n                      }\n                        \n                      \n                    }\n                  }\n                  // Renders music without option to edit or delete\n                  else {\n                    // Check if anyone has already liked this song\n                    if (this.state.likes[song.key] === undefined) {\n                      // Returns the music file without edit or delete function because user does not own these files \n                      return <React.Fragment key={index}>\n                      <li className=\"audioFile\" id={song.key} name={song.name}>\n                        <Like title={song.name} onClick={this.like} numLikes={0} />\n                        <div className=\"songName\"><span className=\"name\">{song.name}</span><br/><span className=\"uploadedBy\">Uploaded by: {song.user}</span></div>\n                        <Audio title={song.name} src={song.url} user={song.parent} />\n                        <div className=\"empty\" />\n                      </li>\n                      </React.Fragment>\n                    }  \n                    else {\n                      // Check if currently logged in user has liked this song before so it can render like button already clicked\n                      if (this.state.likes[song.key].includes(fire.auth().currentUser.uid)) {\n                        // Returns the music file without edit or delete function because user does not own these files \n                        return <React.Fragment key={index}>\n                        <li className=\"audioFile\" id={song.key} name={song.name}>\n                          <Liked title={song.name} onClick={this.like} numLikes={this.state.likes[song.key].length}/>\n                          <div className=\"songName\"><span className=\"name\">{song.name}</span><br/><span className=\"uploadedBy\">Uploaded by: {song.user}</span></div>\n                          <Audio title={song.name} src={song.url} user={song.parent} />\n                          <div className=\"empty\" />\n                        </li>\n                        </React.Fragment>\n                      }\n                      else {\n                        // Returns the music file without edit or delete function because user does not own these files \n                        return <React.Fragment key={index}>\n                        <li className=\"audioFile\" id={song.key} name={song.name}>\n                          <Like title={song.name} onClick={this.like} numLikes={this.state.likes[song.key].length}/>\n                          <div className=\"songName\"><span className=\"name\">{song.name}</span><br/><span className=\"uploadedBy\">Uploaded by: {song.user}</span></div>\n                          <Audio title={song.name} src={song.url} user={song.parent} />\n                          <div className=\"empty\" />\n                        </li>\n                        </React.Fragment>\n                      }\n                        \n                      \n                    }\n                    \n                  }\n                    \n                })\n              }\n              \n          </ul>\n          \n        </div>\n        </div>\n    );\n  }\n\n  // Lists all music files and likes regardless of current user\n  getAudio() {\n    let current = this;\n    // Iterates through each user's database and gets information about every music file\n    fire.database().ref(\"users\").on(\"value\", function(snapshot) {\n      let audio = [];\n      snapshot.forEach(function(users) {\n        users.forEach(function(file) {\n          // Pushes each music file's info into array audio\n          audio.push({name: file.val().name, url: file.val().url, key: file.val().key, parent: file.val().parent, user: file.val().user, original: file.val().original});\n          // Sets state with new info\n          current.setState({audio: audio});\n          current.setState({filtered: audio});\n        })\n\n      })\n      // This function gets an array of who liked which music\n      fire.database().ref(\"likes\").on(\"value\", function(snapshot) {\n        let likes = {};\n        snapshot.forEach(function(file) {\n          // Sets music key as dictionary key with array of users as values\n          likes[file.key] = Object.keys(file.val())});\n          // console.log(likes);\n          // Set state\n          current.setState({likes: likes});\n        })\n        // console.log(current.state.likes);\n        // console.log(current.state.audio);\n        current.setState({isLoading: false});\n      });\n    };\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport './App.css';\nimport fire from './config/fire';\nimport Login from './login';\nimport Home from './home';\n\nclass App extends Component {\n  constructor() {\n    super();\n    // Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n    this.state = ({\n      user: null\n      \n    });\n    this.authListener = this.authListener.bind(this);\n    \n  }\n\n  componentDidMount() {\n    // Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n    this.authListener();\n\n  }\n\n  authListener() {\n    // Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({user});\n      }\n      else {\n        this.setState({user: null});\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.user ? (<Home/>) : (<Login />) }\n      </div>\n      \n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}