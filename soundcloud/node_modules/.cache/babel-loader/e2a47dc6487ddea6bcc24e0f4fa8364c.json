{"ast":null,"code":"import _classCallCheck from\"/Users/albertson/OneDrive - Washington University in St. Louis/CS330 pt2/React-Music-Player/soundcloud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/albertson/OneDrive - Washington University in St. Louis/CS330 pt2/React-Music-Player/soundcloud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/albertson/OneDrive - Washington University in St. Louis/CS330 pt2/React-Music-Player/soundcloud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/albertson/OneDrive - Washington University in St. Louis/CS330 pt2/React-Music-Player/soundcloud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/albertson/OneDrive - Washington University in St. Louis/CS330 pt2/React-Music-Player/soundcloud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import fire from'./config/fire';import'./App.css';import Audio from'./audio';import Delete from'./delete';import Like from'./like';import Liked from'./liked';import $ from'jquery';var Home=/*#__PURE__*/function(_Component){_inherits(Home,_Component);var _super=_createSuper(Home);function Home(props){var _this;_classCallCheck(this,Home);_this=_super.call(this,props);// Set state\n_this.state={file:null,audio:[],isLoading:false,isUploading:false,likes:[],filtered:[]};// Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n// Bind all functions to this\n_this.logout=_this.logout.bind(_assertThisInitialized(_this));_this.upload=_this.upload.bind(_assertThisInitialized(_this));_this.onChangeFile=_this.onChangeFile.bind(_assertThisInitialized(_this));_this.getAudio=_this.getAudio.bind(_assertThisInitialized(_this));_this.delete=_this.delete.bind(_assertThisInitialized(_this));_this.edit=_this.edit.bind(_assertThisInitialized(_this));_this.handleEdit=_this.handleEdit.bind(_assertThisInitialized(_this));_this.like=_this.like.bind(_assertThisInitialized(_this));_this.handleSearch=_this.handleSearch.bind(_assertThisInitialized(_this));return _this;}_createClass(Home,[{key:\"componentDidMount\",value:function componentDidMount(){// Stops page from rerendering until all music files have been loaded by this.getAudio()\nthis.setState({isLoading:true});// Gets all music files to display on page\nthis.getAudio();}},{key:\"logout\",value:function logout(){// Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\nfire.auth().signOut();}},{key:\"onChangeFile\",value:function onChangeFile(file){// Sets state when user chooses a file to upload\nthis.setState({file:file});}},{key:\"upload\",value:function upload(){// Makes sure that a file is selected before uploading file\nif(this.state.file!=null){// Stops page from rerendering until file has been successfully uploaded\nthis.setState({isUploading:true});var current=this;var file=this.state.file[0];// Set storage and database references using currently logged in user's uid\n// Creates a user's folder within the database if current user's own folder doesn't exist, but if it already exists, it will put the uploaded file into the user specific directory\nvar storageRef=fire.storage().ref(fire.auth().currentUser.uid);var db=fire.database().ref(\"users/\"+fire.auth().currentUser.uid);// Checks to see if file name already exists in user's folder\n// Because Firebase API can only request a file that exists, checking for a non-existent file is handled as an error\n// This is why a Promise error is needed as a condition for inserting music files\nstorageRef.child(file.name).getDownloadURL().then(onResolve,onReject);// If promise function resolves, that means file exists\nfunction onResolve(foundURL){alert(\"Filename already exists\");current.setState({isUploading:false});}// If promise function doesn't resolve, then file doesn't exist and we can upload our new file\nfunction onReject(error){// Set file reference for storage\nvar fileRef=storageRef.child(file.name);// Puts file into storage\nfileRef.put(file).then(function(){console.log(\"Uploaded file: \"+file.name);// Gets download url of the newly uploaded file to add to the database\nstorageRef.child(file.name).getDownloadURL().then(function(url){// Generates a new key for the doc that is about to be uploaded from Firebase documentation\nvar newPostKey=db.push().key;// Set database doc with name, url, key, parent, user, and original\ndb.child(newPostKey).set({name:file.name.substring(0,file.name.lastIndexOf('.')),url:url,key:newPostKey,parent:fire.auth().currentUser.uid,user:fire.auth().currentUser.email,original:file.name});// console.log(current.state.audio);\ncurrent.setState({isUploading:false});});});}// Clears the file upload button of the previous file\ndocument.getElementById(\"fileUpload\").value=\"\";}else{// Notifies user to select a file\nalert(\"Please select a file to upload\");}}},{key:\"handleEdit\",value:function handleEdit(e){// Hides the span element that contains the song name\ne.target.classList.add(\"hidden\");// Reveals a text input form  \ne.target.nextElementSibling.classList.remove(\"hidden\");// Reveals an edit button to submit new name for song\ne.target.nextElementSibling.nextElementSibling.classList.remove(\"hidden\");// Reveals a cancel button to cancel editing\ne.target.nextElementSibling.nextElementSibling.nextElementSibling.classList.remove(\"hidden\");}},{key:\"edit\",value:function edit(e){// Checks to see if user clicked on the edit button or the cancel button\nif(e.target.classList.contains(\"fa-edit\")){// Gets the song's unique key that was generated when uploaded to Firebase database\nvar key=e.target.parentElement.parentElement.id;// Gets the new name for the song from the input element\nvar fileName=e.target.previousElementSibling.value;// Set database reference to user specific folder and song that wants to be edited\nvar db=fire.database().ref(\"users/\"+fire.auth().currentUser.uid+\"/\"+key);// Sets the key \"name\" with the new song name \ndb.child(\"name\").set(fileName).then(function(){console.log(\"File renamed\");}).catch(function(error){console.log(\"Edit failed: \"+error.message);});// Hides the cancel button\ne.target.nextElementSibling.classList.add(\"hidden\");// Hides itself\ne.target.classList.add(\"hidden\");// Hides the input form\ne.target.previousElementSibling.classList.add(\"hidden\");// Reveals the span containing the new name of the song\ne.target.previousElementSibling.previousElementSibling.classList.remove(\"hidden\");}else{// Hides the cancel button\ne.target.classList.add(\"hidden\");// Hides the edit button\ne.target.previousElementSibling.classList.add(\"hidden\");// Hides the input form\ne.target.previousElementSibling.previousElementSibling.classList.add(\"hidden\");// Reveals the span containing the original name of the song\ne.target.previousElementSibling.previousElementSibling.previousElementSibling.classList.remove(\"hidden\");}}},{key:\"delete\",value:function _delete(e){// Gets the song name that needs to be deleted\nvar fileName=e.target.title;// Gets the unique key for the song from the <li> element\nvar key=e.target.parentElement.parentElement.id;// Sets database and storage reference\nvar fileRef=fire.storage().ref(fire.auth().currentUser.uid+\"/\"+fileName);var db=fire.database().ref(\"users/\"+fire.auth().currentUser.uid+\"/\"+key);// Removes the reference in the database and then removes the file from the storage\ndb.remove().then(function(){fileRef.delete().then(function(){console.log(\"File Deleted!\");}).catch(function(error){console.log(\"Remove file failed: \"+error.message);});}).catch(function(error){console.log(\"Remove db failed: \"+error.message);});fire.database().ref(\"likes/\"+key).remove().then(function(){console.log(\"Likes removed\");}).catch(function(error){console.log(\"Remove likes failed: \"+error.message);});}},{key:\"like\",value:function like(e){var key=e.target.parentElement.parentElement.id;var songName=e.target.parentElement.parentElement.getAttribute(\"name\");var db=fire.database().ref(\"likes/\"+key);// Check if it hasnt been liked yet, then like it\nif(e.target.classList.contains(\"fa-thumbs-o-up\")){e.target.classList.remove(\"fa-thumbs-o-up\");e.target.classList.add(\"fa-thumbs-up\");db.child(fire.auth().currentUser.uid).set(songName).then(function(){console.log(\"Liked\");}).catch(function(error){console.log(\"Cannot like: \"+error.message);});}// If it has already been liked by user, unlike\nelse{e.target.classList.remove(\"fa-thumbs-up\");e.target.classList.add(\"fa-thumbs-o-up\");db.child(fire.auth().currentUser.uid).remove().then(function(){console.log(\"Unliked\");}).catch(function(error){console.log(\"Cannot unlike: \"+error.message);});}}},{key:\"handleSearch\",value:function handleSearch(e){// Gets the input value in the search bar dynamically\nvar search=$(\"#search\").val();// Sets state of filtered from this.state.audio with song names that only match the search query\n// Code from https://stackoverflow.com/questions/36326612/delete-item-from-state-array-in-react\nthis.setState({filtered:this.state.audio.filter(function(song){if(song.name.toLowerCase().includes(search)){return song;}})});}},{key:\"render\",value:function render(){var _this2=this;// Code to display loading while data is being fetched from https://stackoverflow.com/questions/55359176/handling-undefined-null-properties-in-components-during-first-render\nif(this.state.isLoading){return/*#__PURE__*/React.createElement(\"h2\",null,\"Loading...\");}// Code to display uploading while file is being uploaded to storage\nif(this.state.isUploading){return/*#__PURE__*/React.createElement(\"h2\",null,\"Uploading...\");}// console.log(this.state.audio);\n// console.log(this.state.filtered);\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"page-header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"React Player\"),/*#__PURE__*/React.createElement(\"button\",{onClick:this.logout,id:\"logout\",className:\"btn btn-success\"},\"Logout\")),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"search\",defaultValue:\"\",onChange:this.handleSearch,placeholder:\"    Search\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"file\",id:\"fileUpload\",onChange:function onChange(e){_this2.onChangeFile(e.target.files);}}),/*#__PURE__*/React.createElement(\"button\",{onClick:this.upload,className:\"btn btn-primary\"},\"Upload\")),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"ul\",null,this.state.filtered.map(function(song,index){// Code for conditional rendering from https://stackoverflow.com/questions/44969877/if-condition-inside-of-map-react\n// Checks if logged in user owns these files\nif(song.parent===fire.auth().currentUser.uid){// Check if anyone liked this song\nif(_this2.state.likes[song.key]===undefined){return/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(\"li\",{className:\"audioFile\",id:song.key,name:song.name},/*#__PURE__*/React.createElement(Like,{title:song.name,onClick:_this2.like,numLikes:0}),/*#__PURE__*/React.createElement(\"div\",{className:\"songName\"},/*#__PURE__*/React.createElement(\"span\",{className:\"name\",onClick:_this2.handleEdit},song.name),/*#__PURE__*/React.createElement(\"input\",{className:\"editName hidden\",type:\"text\",defaultValue:song.name}),/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-edit hidden\",onClick:_this2.edit,title:song.name}),/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-times hidden\",onClick:_this2.edit}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"uploadedBy\"},\"Uploaded by: \",song.user)),/*#__PURE__*/React.createElement(Audio,{title:song.name,src:song.url,user:song.parent}),/*#__PURE__*/React.createElement(Delete,{onClick:_this2.delete,title:song.original})));}else{// Check if currently logged in user liked this song so it can render with the like button already clicked\nif(_this2.state.likes[song.key].includes(fire.auth().currentUser.uid)){return/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(\"li\",{className:\"audioFile\",id:song.key,name:song.name},/*#__PURE__*/React.createElement(Liked,{title:song.name,onClick:_this2.like,numLikes:_this2.state.likes[song.key].length}),/*#__PURE__*/React.createElement(\"div\",{className:\"songName\"},/*#__PURE__*/React.createElement(\"span\",{className:\"name\",onClick:_this2.handleEdit},song.name),/*#__PURE__*/React.createElement(\"input\",{className:\"editName hidden\",type:\"text\",defaultValue:song.name}),/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-edit hidden\",onClick:_this2.edit,title:song.name}),/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-times hidden\",onClick:_this2.edit}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"uploadedBy\"},\"Uploaded by: \",song.user)),/*#__PURE__*/React.createElement(Audio,{title:song.name,src:song.url,user:song.parent}),/*#__PURE__*/React.createElement(Delete,{onClick:_this2.delete,title:song.original})));}// Renders without like button being clicked\nelse{return/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(\"li\",{className:\"audioFile\",id:song.key,name:song.name},/*#__PURE__*/React.createElement(Like,{title:song.name,onClick:_this2.like,numLikes:_this2.state.likes[song.key].length}),/*#__PURE__*/React.createElement(\"div\",{className:\"songName\"},/*#__PURE__*/React.createElement(\"span\",{className:\"name\",onClick:_this2.handleEdit},song.name),/*#__PURE__*/React.createElement(\"input\",{className:\"editName hidden\",type:\"text\",defaultValue:song.name}),/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-edit hidden\",onClick:_this2.edit,title:song.name}),/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-times hidden\",onClick:_this2.edit}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"uploadedBy\"},\"Uploaded by: \",song.user)),/*#__PURE__*/React.createElement(Audio,{title:song.name,src:song.url,user:song.parent}),/*#__PURE__*/React.createElement(Delete,{onClick:_this2.delete,title:song.original})));}}}// Renders music without option to edit or delete\nelse{// Check if anyone has already liked this song\nif(_this2.state.likes[song.key]===undefined){// Returns the music file without edit or delete function because user does not own these files \nreturn/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(\"li\",{className:\"audioFile\",id:song.key,name:song.name},/*#__PURE__*/React.createElement(Like,{title:song.name,onClick:_this2.like,numLikes:0}),/*#__PURE__*/React.createElement(\"div\",{className:\"songName\"},/*#__PURE__*/React.createElement(\"span\",{className:\"name\"},song.name),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"uploadedBy\"},\"Uploaded by: \",song.user)),/*#__PURE__*/React.createElement(Audio,{title:song.name,src:song.url,user:song.parent}),/*#__PURE__*/React.createElement(\"div\",{className:\"empty\"})));}else{// Check if currently logged in user has liked this song before so it can render like button already clicked\nif(_this2.state.likes[song.key].includes(fire.auth().currentUser.uid)){// Returns the music file without edit or delete function because user does not own these files \nreturn/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(\"li\",{className:\"audioFile\",id:song.key,name:song.name},/*#__PURE__*/React.createElement(Liked,{title:song.name,onClick:_this2.like,numLikes:_this2.state.likes[song.key].length}),/*#__PURE__*/React.createElement(\"div\",{className:\"songName\"},/*#__PURE__*/React.createElement(\"span\",{className:\"name\"},song.name),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"uploadedBy\"},\"Uploaded by: \",song.user)),/*#__PURE__*/React.createElement(Audio,{title:song.name,src:song.url,user:song.parent}),/*#__PURE__*/React.createElement(\"div\",{className:\"empty\"})));}else{// Returns the music file without edit or delete function because user does not own these files \nreturn/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(\"li\",{className:\"audioFile\",id:song.key,name:song.name},/*#__PURE__*/React.createElement(Like,{title:song.name,onClick:_this2.like,numLikes:_this2.state.likes[song.key].length}),/*#__PURE__*/React.createElement(\"div\",{className:\"songName\"},/*#__PURE__*/React.createElement(\"span\",{className:\"name\"},song.name),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"uploadedBy\"},\"Uploaded by: \",song.user)),/*#__PURE__*/React.createElement(Audio,{title:song.name,src:song.url,user:song.parent}),/*#__PURE__*/React.createElement(\"div\",{className:\"empty\"})));}}}}))));}// Lists all music files and likes regardless of current user\n},{key:\"getAudio\",value:function getAudio(){var current=this;// Iterates through each user's database and gets information about every music file\nfire.database().ref(\"users\").on(\"value\",function(snapshot){var audio=[];snapshot.forEach(function(users){users.forEach(function(file){// Pushes each music file's info into array audio\naudio.push({name:file.val().name,url:file.val().url,key:file.val().key,parent:file.val().parent,user:file.val().user,original:file.val().original});// Sets state with new info\ncurrent.setState({audio:audio});current.setState({filtered:audio});});});// This function gets an array of who liked which music\nfire.database().ref(\"likes\").on(\"value\",function(snapshot){var likes={};snapshot.forEach(function(file){// Sets music key as dictionary key with array of users as values\nlikes[file.key]=Object.keys(file.val());});// console.log(likes);\n// Set state\ncurrent.setState({likes:likes});});// console.log(current.state.likes);\n// console.log(current.state.audio);\ncurrent.setState({isLoading:false});});}}]);return Home;}(Component);export default Home;","map":{"version":3,"sources":["/Users/albertson/OneDrive - Washington University in St. Louis/CS330 pt2/React-Music-Player/soundcloud/src/home.js"],"names":["React","Component","fire","Audio","Delete","Like","Liked","$","Home","props","state","file","audio","isLoading","isUploading","likes","filtered","logout","bind","upload","onChangeFile","getAudio","delete","edit","handleEdit","like","handleSearch","setState","auth","signOut","current","storageRef","storage","ref","currentUser","uid","db","database","child","name","getDownloadURL","then","onResolve","onReject","foundURL","alert","error","fileRef","put","console","log","url","newPostKey","push","key","set","substring","lastIndexOf","parent","user","email","original","document","getElementById","value","e","target","classList","add","nextElementSibling","remove","contains","parentElement","id","fileName","previousElementSibling","catch","message","title","songName","getAttribute","search","val","filter","song","toLowerCase","includes","files","map","index","undefined","length","on","snapshot","forEach","users","Object","keys"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport fire from './config/fire';\nimport './App.css';\nimport Audio from './audio';\nimport Delete from './delete';\nimport Like from './like';\nimport Liked from './liked';\nimport $ from 'jquery';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    // Set state\n    this.state = {\n      file: null,\n      audio: [],\n      isLoading: false,\n      isUploading: false,\n      likes:[],\n      filtered: [],\n    }\n    // Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n    // Bind all functions to this\n    this.logout = this.logout.bind(this);\n    this.upload = this.upload.bind(this);\n    this.onChangeFile = this.onChangeFile.bind(this);\n    this.getAudio = this.getAudio.bind(this);\n    this.delete = this.delete.bind(this);\n    this.edit = this.edit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.like = this.like.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  componentDidMount() {\n    // Stops page from rerendering until all music files have been loaded by this.getAudio()\n    this.setState({isLoading: true});\n    // Gets all music files to display on page\n    this.getAudio();\n\n  }\n\n  logout() {\n    // Followed firebase authentication tutorial at https://www.youtube.com/watch?v=r4EsP6rovwk\n    fire.auth().signOut();\n  }\n\n  onChangeFile(file) {\n    // Sets state when user chooses a file to upload\n    this.setState({\n      file\n    })\n  }\n\n  upload() {\n    // Makes sure that a file is selected before uploading file\n    if (this.state.file != null) {\n      // Stops page from rerendering until file has been successfully uploaded\n      this.setState({isUploading:true});\n      const current = this;\n      const file = this.state.file[0]\n      // Set storage and database references using currently logged in user's uid\n      // Creates a user's folder within the database if current user's own folder doesn't exist, but if it already exists, it will put the uploaded file into the user specific directory\n      const storageRef = fire.storage().ref(fire.auth().currentUser.uid);\n      const db = fire.database().ref(\"users/\" + fire.auth().currentUser.uid);\n      // Checks to see if file name already exists in user's folder\n      // Because Firebase API can only request a file that exists, checking for a non-existent file is handled as an error\n      // This is why a Promise error is needed as a condition for inserting music files\n      storageRef.child(file.name).getDownloadURL().then(onResolve, onReject);\n      // If promise function resolves, that means file exists\n      function onResolve(foundURL) {\n        alert(\"Filename already exists\");\n        current.setState({isUploading: false});\n      }\n      // If promise function doesn't resolve, then file doesn't exist and we can upload our new file\n      function onReject(error) {\n        // Set file reference for storage\n        const fileRef = storageRef.child(file.name);\n        // Puts file into storage\n        fileRef.put(file).then(() => {\n          console.log(\"Uploaded file: \" + file.name);\n          // Gets download url of the newly uploaded file to add to the database\n          storageRef.child(file.name).getDownloadURL().then(url => {\n            // Generates a new key for the doc that is about to be uploaded from Firebase documentation\n            let newPostKey = db.push().key;\n            // Set database doc with name, url, key, parent, user, and original\n            db.child(newPostKey).set({\n                name : file.name.substring(0,file.name.lastIndexOf('.')),\n                url : url,\n                key : newPostKey,\n                parent : fire.auth().currentUser.uid,\n                user : fire.auth().currentUser.email,\n                original : file.name\n            });\n            // console.log(current.state.audio);\n            current.setState({isUploading:false});\n          })\n        })\n      }\n      // Clears the file upload button of the previous file\n      document.getElementById(\"fileUpload\").value = \"\";\n    }\n    else {\n      // Notifies user to select a file\n      alert(\"Please select a file to upload\");\n    }\n    \n  } \n\n  handleEdit(e) {\n    // Hides the span element that contains the song name\n    e.target.classList.add(\"hidden\");\n    // Reveals a text input form  \n    e.target.nextElementSibling.classList.remove(\"hidden\");\n    // Reveals an edit button to submit new name for song\n    e.target.nextElementSibling.nextElementSibling.classList.remove(\"hidden\");\n    // Reveals a cancel button to cancel editing\n    e.target.nextElementSibling.nextElementSibling.nextElementSibling.classList.remove(\"hidden\");\n\n  }\n\n  edit(e) {\n    // Checks to see if user clicked on the edit button or the cancel button\n    if (e.target.classList.contains(\"fa-edit\")) {\n      // Gets the song's unique key that was generated when uploaded to Firebase database\n      let key = e.target.parentElement.parentElement.id;\n      // Gets the new name for the song from the input element\n      let fileName = e.target.previousElementSibling.value;\n      // Set database reference to user specific folder and song that wants to be edited\n      let db = fire.database().ref(\"users/\" + fire.auth().currentUser.uid + \"/\" + key);\n      // Sets the key \"name\" with the new song name \n      db.child(\"name\").set(fileName).then(function() {\n        console.log(\"File renamed\");\n      }).catch(function(error) {\n        console.log(\"Edit failed: \" + error.message);\n      });\n      // Hides the cancel button\n      e.target.nextElementSibling.classList.add(\"hidden\");\n      // Hides itself\n      e.target.classList.add(\"hidden\");\n      // Hides the input form\n      e.target.previousElementSibling.classList.add(\"hidden\");\n      // Reveals the span containing the new name of the song\n      e.target.previousElementSibling.previousElementSibling.classList.remove(\"hidden\");\n    }\n    else {\n      // Hides the cancel button\n      e.target.classList.add(\"hidden\");\n      // Hides the edit button\n      e.target.previousElementSibling.classList.add(\"hidden\");\n      // Hides the input form\n      e.target.previousElementSibling.previousElementSibling.classList.add(\"hidden\");\n      // Reveals the span containing the original name of the song\n      e.target.previousElementSibling.previousElementSibling.previousElementSibling.classList.remove(\"hidden\");\n    }\n\n\n  }\n\n  delete(e) {\n    // Gets the song name that needs to be deleted\n    let fileName = e.target.title;\n    // Gets the unique key for the song from the <li> element\n    let key = e.target.parentElement.parentElement.id;\n    // Sets database and storage reference\n    const fileRef = fire.storage().ref(fire.auth().currentUser.uid + \"/\" + fileName);\n    const db = fire.database().ref(\"users/\" + fire.auth().currentUser.uid + \"/\" + key);\n    // Removes the reference in the database and then removes the file from the storage\n    db.remove().then(function() {\n      fileRef.delete().then(function() {\n        console.log(\"File Deleted!\");\n      }).catch(function(error) {\n        console.log(\"Remove file failed: \" + error.message)\n      })\n    }).catch(function(error) {\n      console.log(\"Remove db failed: \" + error.message);\n    });\n    fire.database().ref(\"likes/\" + key).remove().then(function() {\n      console.log(\"Likes removed\");\n    }).catch(function(error) {\n      console.log(\"Remove likes failed: \" + error.message);\n    })\n    \n  }\n\n  like(e) {\n    let key = e.target.parentElement.parentElement.id;\n    let songName = e.target.parentElement.parentElement.getAttribute(\"name\");\n    const db = fire.database().ref(\"likes/\" + key);\n    // Check if it hasnt been liked yet, then like it\n    if (e.target.classList.contains(\"fa-thumbs-o-up\")) {\n      e.target.classList.remove(\"fa-thumbs-o-up\");\n      e.target.classList.add(\"fa-thumbs-up\");\n      db.child(fire.auth().currentUser.uid).set(songName).then(function() {\n        console.log(\"Liked\");\n      }).catch(function(error) {\n        console.log(\"Cannot like: \" + error.message);\n      });\n\n    }\n    // If it has already been liked by user, unlike\n    else {\n      e.target.classList.remove(\"fa-thumbs-up\");\n      e.target.classList.add(\"fa-thumbs-o-up\");\n      db.child(fire.auth().currentUser.uid).remove().then(function() {\n        console.log(\"Unliked\");\n      }).catch(function(error) {\n        console.log(\"Cannot unlike: \" + error.message);\n      })\n    }\n  }\n\n  handleSearch(e) {\n    // Gets the input value in the search bar dynamically\n    let search = $(\"#search\").val();\n    // Sets state of filtered from this.state.audio with song names that only match the search query\n    // Code from https://stackoverflow.com/questions/36326612/delete-item-from-state-array-in-react\n    this.setState({\n      filtered: this.state.audio.filter(function(song) { \n        if (song.name.toLowerCase().includes(search)) {\n          return song\n        }\n\n    })});\n  }\n\n  render() {\n    // Code to display loading while data is being fetched from https://stackoverflow.com/questions/55359176/handling-undefined-null-properties-in-components-during-first-render\n    if (this.state.isLoading) {\n      return <h2>Loading...</h2>\n    }\n    // Code to display uploading while file is being uploaded to storage\n    if (this.state.isUploading) {\n      return <h2>Uploading...</h2>\n    }\n\n    // console.log(this.state.audio);\n    // console.log(this.state.filtered);\n    return (\n      <div className=\"container\">\n        {/* Main title and logout button */}\n        <div className=\"page-header\">\n          <h1>React Player</h1>\n          <button onClick={this.logout} id=\"logout\" className=\"btn btn-success\">Logout</button>\n        </div >\n        {/* Upload file elements */}\n        <div className=\"row\">\n          <input type=\"text\" id=\"search\" defaultValue=\"\" onChange={this.handleSearch} placeholder=\"    Search\" />\n          <input type=\"file\" id=\"fileUpload\" onChange={(e) => {this.onChangeFile(e.target.files)}} />\n          <button onClick={this.upload} className=\"btn btn-primary\">Upload</button>\n        </div>\n  \n        <div className=\"row\">\n          <ul>\n            {/* List of music files that will be displayed with titles, user who uploaded it, a music player with mutliple functions, and an edit or delete function for user's own music files */}\n              {this.state.filtered.map((song, index) => {\n                // Code for conditional rendering from https://stackoverflow.com/questions/44969877/if-condition-inside-of-map-react\n                // Checks if logged in user owns these files\n                  if (song.parent === fire.auth().currentUser.uid) {\n                    // Check if anyone liked this song\n                    if (this.state.likes[song.key] === undefined) {\n                      return <React.Fragment key={index}>\n                      <li className=\"audioFile\" id={song.key} name={song.name}>\n                        <Like title={song.name} onClick={this.like} numLikes={0} />\n                        <div className=\"songName\">\n                          <span className=\"name\" onClick={this.handleEdit}>{song.name}</span>\n                          <input className=\"editName hidden\" type=\"text\" defaultValue={song.name}/>\n                          <i className=\"fa fa-edit hidden\" onClick={this.edit} title={song.name}/>\n                          <i className=\"fa fa-times hidden\" onClick={this.edit} />\n                          <br/>\n                          <span className=\"uploadedBy\">Uploaded by: {song.user}</span>\n                        </div>\n                        {/* Audio player component */}\n                        <Audio title={song.name} src={song.url} user={song.parent} />\n                        {/* Delete button component */}\n                        <Delete onClick={this.delete} title={song.original} />\n                      </li>\n                      </React.Fragment>\n                    }\n                    else {\n                      // Check if currently logged in user liked this song so it can render with the like button already clicked\n                      if (this.state.likes[song.key].includes(fire.auth().currentUser.uid)) {\n                        return <React.Fragment key={index}>\n                        <li className=\"audioFile\" id={song.key} name={song.name}>\n                          <Liked title={song.name} onClick={this.like} numLikes={this.state.likes[song.key].length} />\n                          <div className=\"songName\">\n                            <span className=\"name\" onClick={this.handleEdit}>{song.name}</span>\n                            <input className=\"editName hidden\" type=\"text\" defaultValue={song.name}/>\n                            <i className=\"fa fa-edit hidden\" onClick={this.edit} title={song.name}/>\n                            <i className=\"fa fa-times hidden\" onClick={this.edit} />\n                            <br/>\n                            <span className=\"uploadedBy\">Uploaded by: {song.user}</span>\n                          </div>\n                          {/* Audio player component */}\n                          <Audio title={song.name} src={song.url} user={song.parent} />\n                          {/* Delete button component */}\n                          <Delete onClick={this.delete} title={song.original} />\n                        </li>\n                        </React.Fragment>\n                      }\n                      // Renders without like button being clicked\n                      else {\n                        return <React.Fragment key={index}>\n                        <li className=\"audioFile\" id={song.key} name={song.name}>\n                          <Like title={song.name} onClick={this.like} numLikes={this.state.likes[song.key].length} />\n                          <div className=\"songName\">\n                            <span className=\"name\" onClick={this.handleEdit}>{song.name}</span>\n                            <input className=\"editName hidden\" type=\"text\" defaultValue={song.name}/>\n                            <i className=\"fa fa-edit hidden\" onClick={this.edit} title={song.name}/>\n                            <i className=\"fa fa-times hidden\" onClick={this.edit} />\n                            <br/>\n                            <span className=\"uploadedBy\">Uploaded by: {song.user}</span>\n                          </div>\n                          {/* Audio player component */}\n                          <Audio title={song.name} src={song.url} user={song.parent} />\n                          {/* Delete button component */}\n                          <Delete onClick={this.delete} title={song.original} />\n                        </li>\n                        </React.Fragment>\n                      }\n                        \n                      \n                    }\n                  }\n                  // Renders music without option to edit or delete\n                  else {\n                    // Check if anyone has already liked this song\n                    if (this.state.likes[song.key] === undefined) {\n                      // Returns the music file without edit or delete function because user does not own these files \n                      return <React.Fragment key={index}>\n                      <li className=\"audioFile\" id={song.key} name={song.name}>\n                        <Like title={song.name} onClick={this.like} numLikes={0} />\n                        <div className=\"songName\"><span className=\"name\">{song.name}</span><br/><span className=\"uploadedBy\">Uploaded by: {song.user}</span></div>\n                        <Audio title={song.name} src={song.url} user={song.parent} />\n                        <div className=\"empty\" />\n                      </li>\n                      </React.Fragment>\n                    }  \n                    else {\n                      // Check if currently logged in user has liked this song before so it can render like button already clicked\n                      if (this.state.likes[song.key].includes(fire.auth().currentUser.uid)) {\n                        // Returns the music file without edit or delete function because user does not own these files \n                        return <React.Fragment key={index}>\n                        <li className=\"audioFile\" id={song.key} name={song.name}>\n                          <Liked title={song.name} onClick={this.like} numLikes={this.state.likes[song.key].length}/>\n                          <div className=\"songName\"><span className=\"name\">{song.name}</span><br/><span className=\"uploadedBy\">Uploaded by: {song.user}</span></div>\n                          <Audio title={song.name} src={song.url} user={song.parent} />\n                          <div className=\"empty\" />\n                        </li>\n                        </React.Fragment>\n                      }\n                      else {\n                        // Returns the music file without edit or delete function because user does not own these files \n                        return <React.Fragment key={index}>\n                        <li className=\"audioFile\" id={song.key} name={song.name}>\n                          <Like title={song.name} onClick={this.like} numLikes={this.state.likes[song.key].length}/>\n                          <div className=\"songName\"><span className=\"name\">{song.name}</span><br/><span className=\"uploadedBy\">Uploaded by: {song.user}</span></div>\n                          <Audio title={song.name} src={song.url} user={song.parent} />\n                          <div className=\"empty\" />\n                        </li>\n                        </React.Fragment>\n                      }\n                        \n                      \n                    }\n                    \n                  }\n                    \n                })\n              }\n              \n          </ul>\n          \n        </div>\n        </div>\n    );\n  }\n\n  // Lists all music files and likes regardless of current user\n  getAudio() {\n    let current = this;\n    // Iterates through each user's database and gets information about every music file\n    fire.database().ref(\"users\").on(\"value\", function(snapshot) {\n      let audio = [];\n      snapshot.forEach(function(users) {\n        users.forEach(function(file) {\n          // Pushes each music file's info into array audio\n          audio.push({name: file.val().name, url: file.val().url, key: file.val().key, parent: file.val().parent, user: file.val().user, original: file.val().original});\n          // Sets state with new info\n          current.setState({audio: audio});\n          current.setState({filtered: audio});\n        })\n\n      })\n      // This function gets an array of who liked which music\n      fire.database().ref(\"likes\").on(\"value\", function(snapshot) {\n        let likes = {};\n        snapshot.forEach(function(file) {\n          // Sets music key as dictionary key with array of users as values\n          likes[file.key] = Object.keys(file.val())});\n          // console.log(likes);\n          // Set state\n          current.setState({likes: likes});\n        })\n        // console.log(current.state.likes);\n        // console.log(current.state.audio);\n        current.setState({isLoading: false});\n      });\n    };\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}